domain_root: hyenaclan.org

dist_dir_path: ~/dev/bossjones/bosslab-playbooks/dist
manifest_dir_name: manifests/borg-manifests
manifest_dir_path: "{{dist_dir_path}}/{{manifest_dir_name}}"
path_to_network_disk: "/mnt/publicdata"
main_network_interface: 'ens192'
nfs_server_group: nfs_masters
nfs_client_group: nfs_clients
nfs_server_ip_override: 192.168.1.174

#      .########..######..##.....##..#######...######..########.########..##.....##.########.########.
#      .##.......##....##.##.....##.##.....##.##....##.##.......##.....##.##.....##.##.......##.....##
#      .##.......##.......##.....##.##.....##.##.......##.......##.....##.##.....##.##.......##.....##
#      .######...##.......#########.##.....##..######..######...########..##.....##.######...########.
#      .##.......##.......##.....##.##.....##.......##.##.......##...##....##...##..##.......##...##..
#      .##.......##....##.##.....##.##.....##.##....##.##.......##....##....##.##...##.......##....##.
#      .########..######..##.....##..#######...######..########.##.....##....###....########.##.....##


boss__echoserver__echoserver_subdomain: echoserver
boss__echoserver__manifest_path: "{{manifest_dir_path}}/echoserver"
boss__echoserver__namespace_name: echoserver
boss__echoserver__deployment_name: echoserver
boss__echoserver__echoserver_version: 2.1
boss__echoserver__echoserver_image_repo: "gcr.io/kubernetes-e2e-test-images/echoserver"
boss__echoserver__echoserver_image_tag: "{{ boss__echoserver__echoserver_version }}"
boss__echoserver__echoserver_cpu_limit: 100m
boss__echoserver__echoserver_mem_limit: 55Mi
boss__echoserver__echoserver_cpu_requests: 100m
boss__echoserver__echoserver_mem_requests: 20Mi
boss__echoserver__deployment_annotations_list:
  - name: nginx.ingress.kubernetes.io/ssl-redirect
    val: \"false\"
boss__echoserver__deployment_annotations:
  nginx.ingress.kubernetes.io/ssl-redirect: \"false\"
boss__echoserver__deployment_labels:
  run: nginx
boss__echoserver__deployment_spec_replicas: 2
boss__echoserver__deployment_spec_template_metadata_labels: "{{boss__echoserver__deployment_labels}}"
boss__echoserver__ingress_labels:
  run: nginx
boss__echoserver__ingress_annotations:
  nginx.ingress.kubernetes.io/ssl-redirect: \"false\"
boss__echoserver__service_labels:
  run: nginx
boss__echoserver__service__spec_selector:
  run: nginx
# boss__echoserver__echoserver_service_port: 9200


# # Kubernetes dashboard
# # RBAC required. see docs/getting-started.md for access details.
# dashboard_enabled: true

# # Addons which can be enabled
# efk_enabled: false
# helm_enabled: false
# istio_enabled: false
# registry_enabled: false
# enable_network_policy: false
# local_volume_provisioner_enabled: "{{ local_volumes_enabled | default('false') }}"
# persistent_volumes_enabled: false
# cephfs_provisioner_enabled: false
# ingress_nginx_enabled: false
# cert_manager_enabled: false

##########################################################################################################
#                   ..######.....###....##.......####..######...#######.
#                   .##....##...##.##...##........##..##....##.##.....##
#                   .##........##...##..##........##..##.......##.....##
#                   .##.......##.....##.##........##..##.......##.....##
#                   .##.......#########.##........##..##.......##.....##
#                   .##....##.##.....##.##........##..##....##.##.....##
#                   ..######..##.....##.########.####..######...#######.
##########################################################################################################

boss__calico__manifest_path: "{{manifest_dir_path}}/calico"
boss__calico__namespace_name: kube-system
boss__calico__prometheus_metrics_enabled: true

boss__calico__node_version: v3.3.2
boss__calico__node_image_repo: "quay.io/calico/node"
boss__calico__node_image_tag: "{{ boss__calico__node_version }}"

boss__calico__cni_version: v3.3.2
boss__calico__cni_image_repo: "quay.io/calico/cni"
boss__calico__cni_image_tag: "{{ boss__calico__node_version }}"

boss__calico__node_daemonset_annotations:
  scheduler.alpha.kubernetes.io/critical-pod: ''

# {{ calico_node_image_repo }}:{{ calico_node_image_tag }}

##########################################################################################################
#      .########.....###.....######..##.....##.########...#######.....###....########..########.
#      .##.....##...##.##...##....##.##.....##.##.....##.##.....##...##.##...##.....##.##.....##
#      .##.....##..##...##..##.......##.....##.##.....##.##.....##..##...##..##.....##.##.....##
#      .##.....##.##.....##..######..#########.########..##.....##.##.....##.########..##.....##
#      .##.....##.#########.......##.##.....##.##.....##.##.....##.#########.##...##...##.....##
#      .##.....##.##.....##.##....##.##.....##.##.....##.##.....##.##.....##.##....##..##.....##
#      .########..##.....##..######..##.....##.########...#######..##.....##.##.....##.########.
##########################################################################################################

boss__dashboard__manifest_path: "{{manifest_dir_path}}/dashboard"
boss__dashboard__namespace_name: kube-system

boss__dashboard__version: v1.10.0
boss__dashboard__image_repo: "k8s.gcr.io/kubernetes-dashboard-amd64"
boss__dashboard__image_tag: "{{ boss__dashboard__version }}"

boss__dashboard__deployment_container_args:
  - --auto-generate-certificates
  # Uncomment the following line to manually specify Kubernetes API server Host
  # If not specified, Dashboard will attempt to auto discover the API server and connect
  # to it. Uncomment only if the default does not work.
  # - --apiserver-host=http://my-address:port


##########################################################################################################
#      .########.....###.....######..##.....##.########...#######.....###....########..########.
#      .##.....##...##.##...##....##.##.....##.##.....##.##.....##...##.##...##.....##.##.....##
#      .##.....##..##...##..##.......##.....##.##.....##.##.....##..##...##..##.....##.##.....##
#      .##.....##.##.....##..######..#########.########..##.....##.##.....##.########..##.....##
#      .##.....##.#########.......##.##.....##.##.....##.##.....##.#########.##...##...##.....##
#      .##.....##.##.....##.##....##.##.....##.##.....##.##.....##.##.....##.##....##..##.....##
#      .########..##.....##..######..##.....##.########...#######..##.....##.##.....##.########.
##########################################################################################################

boss__dashboard__admin__manifest_path: "{{manifest_dir_path}}/dashboard-admin"
boss__dashboard__admin__namespace_name: kube-system


##########################################################################################################
#   .########.########.##....##
#   .##.......##.......##...##.
#   .##.......##.......##..##..
#   .######...######...#####...
#   .##.......##.......##..##..
#   .##.......##.......##...##.
#   .########.##.......##....##
##########################################################################################################
boss__efk__elasticsearch_subdomain: elasticsearch
boss__efk__manifest_path: "{{manifest_dir_path}}/efk"
boss__efk__namespace_name: kube-system
boss__efk__deployment_name: efk


##########################################################################################################
#    .########.##..........###.....######..########.####..######...######..########....###....########...######..##.....##
#    .##.......##.........##.##...##....##....##.....##..##....##.##....##.##.........##.##...##.....##.##....##.##.....##
#    .##.......##........##...##..##..........##.....##..##.......##.......##........##...##..##.....##.##.......##.....##
#    .######...##.......##.....##..######.....##.....##..##........######..######...##.....##.########..##.......#########
#    .##.......##.......#########.......##....##.....##..##.............##.##.......#########.##...##...##.......##.....##
#    .##.......##.......##.....##.##....##....##.....##..##....##.##....##.##.......##.....##.##....##..##....##.##.....##
#    .########.########.##.....##..######.....##....####..######...######..########.##.....##.##.....##..######..##.....##
##########################################################################################################
boss__efk__elasticsearch_ingress_annotations:
  nginx.ingress.kubernetes.io/ssl-redirect: \"false\"
boss__efk__elasticsearch_ingress_labels:
  k8s-app: elasticsearch-logging
  kubernetes.io/cluster-service: "true"
  addonmanager.kubernetes.io/mode: Reconcile
  boss-part-of: efk
boss__efk__elasticsearch_service_labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Elasticsearch"
    boss-part-of: efk
boss__efk__elasticsearch_persistent_volume_claim_labels:
  kubernetes.io/cluster-service: "true"
  addonmanager.kubernetes.io/mode: Reconcile
  k8s-app: elasticsearch-logging
  boss-part-of: efk
boss__efk__elasticsearch_persistent_volume_claim_spec_resources_requests_storage: "2Gi"
boss__efk__elasticsearch_persistent_volume_labels:
  kubernetes.io/cluster-service: "true"
  addonmanager.kubernetes.io/mode: Reconcile
  k8s-app: elasticsearch-logging
  boss-part-of: efk
boss__efk__elasticsearch_version: v5.6.2
boss__efk__elasticsearch_image_repo: "bossjones/elasticsearch"
boss__efk__elasticsearch_image_tag: "{{ boss__efk__elasticsearch_version }}"
boss__efk__elasticsearch_cpu_limit: 1000m
boss__efk__elasticsearch_mem_limit: 4048Mi
boss__efk__elasticsearch_cpu_requests: 100m
boss__efk__elasticsearch_mem_requests: 2350Mi

boss__efk__elasticsearch_stateful_set_env_ES_JAVA_OPTS: "-Xms2048m -Xmx2048m"
boss__efk__elasticsearch_service_account_labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk
boss__efk__elasticsearch_cluster_role_labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk

boss__efk__elasticsearch_cluster_role_binding_labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk

boss__efk__elasticsearch_stateful_set_labels:
    k8s-app: elasticsearch-logging
    version: "{{boss__efk__elasticsearch_version}}"
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk
boss__efk__elasticsearch_stateful_set_spec_replicas: 1
boss__efk__elasticsearch_stateful_set_spec_selector_match_labels:
        k8s-app: elasticsearch-logging
        version: v5.6.2
boss__efk__elasticsearch_stateful_set_spec_template_metadata_labels:
        k8s-app: elasticsearch-logging
        version: v5.6.2
        kubernetes.io/cluster-service: "true"

#########################

##########################################################################################################
#     .########..######...........######..##.....##.########.....###....########..#######..########.
#     .##.......##....##.........##....##.##.....##.##.....##...##.##......##....##.....##.##.....##
#     .##.......##...............##.......##.....##.##.....##..##...##.....##....##.....##.##.....##
#     .######....######..#######.##.......##.....##.########..##.....##....##....##.....##.########.
#     .##.............##.........##.......##.....##.##...##...#########....##....##.....##.##...##..
#     .##.......##....##.........##....##.##.....##.##....##..##.....##....##....##.....##.##....##.
#     .########..######...........######...#######..##.....##.##.....##....##.....#######..##.....##
##########################################################################################################
boss__efk__elasticsearch_curator_deployment_labels:
  k8s-app: es-curator
  boss-part-of: efk

boss__efk__elasticsearch_curator_version: 5.3.0-1
boss__efk__elasticsearch_curator_image_repo: "aknudsen/es-curator-service"
boss__efk__elasticsearch_curator_image_tag: "{{ boss__efk__elasticsearch_curator_version }}"
boss__efk__elasticsearch_curator_cpu_limit: 200m
boss__efk__elasticsearch_curator_mem_limit: 500Mi
boss__efk__elasticsearch_curator_cpu_requests: 100m
boss__efk__elasticsearch_curator_mem_requests: 200Mi

#########################


##########################################################################################################
#    .########.##.......##.....##.########.##....##.########.########.
#    .##.......##.......##.....##.##.......###...##....##....##.....##
#    .##.......##.......##.....##.##.......####..##....##....##.....##
#    .######...##.......##.....##.######...##.##.##....##....##.....##
#    .##.......##.......##.....##.##.......##..####....##....##.....##
#    .##.......##.......##.....##.##.......##...###....##....##.....##
#    .##.......########..#######..########.##....##....##....########.
##########################################################################################################
boss__efk__fluentd_version: v2.2.0
boss__efk__fluentd_image_repo: "bossjones/fluentd-elasticsearch"
boss__efk__fluentd_image_tag: "{{ boss__efk__fluentd_version }}"
boss__efk__fluentd_mem_limit: 500Mi
boss__efk__fluentd_cpu_requests: 100m
boss__efk__fluentd_mem_requests: 200Mi
boss__efk__fluentd_config_map_labels:
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk
boss__efk__fluentd_service_account_labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk
boss__efk__fluentd_cluster_role_labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk
boss__efk__fluentd_cluster_role_binding_labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk
boss__efk__fluentd_daemon_set_labels:
    k8s-app: fluentd-es
    version: v2.2.1
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk
boss__efk__fluentd_daemon_set_spec_selector_match_labels:
      k8s-app: fluentd-es
      version: v2.2.1
boss__efk__fluentd_daemon_set_spec_template_metadata_labels:
        k8s-app: fluentd-es
        kubernetes.io/cluster-service: "true"
        version: v2.2.1
        boss-part-of: efk
boss__efk__fluentd_daemon_set_spec_template_metadata_annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'

############################################


##########################################################################################################
#   .##....##.####.########.....###....##....##....###...
#   .##...##...##..##.....##...##.##...###...##...##.##..
#   .##..##....##..##.....##..##...##..####..##..##...##.
#   .#####.....##..########..##.....##.##.##.##.##.....##
#   .##..##....##..##.....##.#########.##..####.#########
#   .##...##...##..##.....##.##.....##.##...###.##.....##
#   .##....##.####.########..##.....##.##....##.##.....##
##########################################################################################################
boss__efk__kibana_subdomain: kibana
boss__efk__kibana_version: 5.6.2
boss__efk__kibana_image_repo: "bossjones/kibana"
boss__efk__kibana_image_tag: "{{ boss__efk__kibana_version }}"
boss__efk__kibana_cpu_limit: 1000m
boss__efk__kibana_cpu_requests: 1000m

boss__efk__kibana_deployment_labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk
boss__efk__kibana_deployment_spec_replicas: 1
boss__efk__kibana_deployment_spec_selector_match_labels:
      k8s-app: kibana-logging
boss__efk__kibana_deployment_spec_template_metadata_labels:
        k8s-app: kibana-logging
boss__efk__kibana_deployment_spec_template_spec_node_selector:
        kubernetes.io/hostname: "borg-worker-01"
boss__efk__kibana_ingress_labels:
    k8s-app: kibana-ingress
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: efk
boss__efk__kibana_ingress_annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"
boss__efk__kibana_service_labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Kibana"
    boss-part-of: efk
############################################


boss__efk__elasticsearch_persistent_volume_spec_capacity_storage: 5Gi
boss__efk__elasticsearch_persistent_volume_spec_nfs_path: "{{path_to_network_disk}}/elasticsearch"
# boss__efk__nfs_master_node_ip: "{{ hostvars[groups[nfs_server_group][0]]['ansible_' + main_network_interface].ipv4.address }}"
boss__efk__nfs_master_node_ip: "{{ nfs_server_ip_override }}"


##########################################


##########################################################################################################
#      .########..########..######...####..######..########.########..##....##
#      .##.....##.##.......##....##...##..##....##....##....##.....##..##..##.
#      .##.....##.##.......##.........##..##..........##....##.....##...####..
#      .########..######...##...####..##...######.....##....########.....##...
#      .##...##...##.......##....##...##........##....##....##...##......##...
#      .##....##..##.......##....##...##..##....##....##....##....##.....##...
#      .##.....##.########..######...####..######.....##....##.....##....##...
##########################################################################################################
boss__registry__subdomain: registry
boss__registry__manifest_path: "{{manifest_dir_path}}/registry"
boss__registry__namespace_name: kube-system
boss__registry__deployment_name: registry
boss__registry__enable_pvc: false

boss__registry__ingress_annotations:
  nginx.ingress.kubernetes.io/ssl-redirect: \"false\"
boss__registry__ingress_labels:
  k8s-app: registry
  kubernetes.io/cluster-service: "true"
  addonmanager.kubernetes.io/mode: Reconcile
  boss-part-of: registry
  version: "{{boss__registry__version}}"
boss__registry__service_labels:
    k8s-app: registry
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "KubeRegistry"
    boss-part-of: registry
    version: "{{boss__registry__version}}"
boss__registry__persistent_volume_claim_labels:
  kubernetes.io/cluster-service: "true"
  addonmanager.kubernetes.io/mode: Reconcile
  k8s-app: registry
  boss-part-of: registry
  version: "{{boss__registry__version}}"
boss__registry__persistent_volume_claim_spec_resources_requests_storage: "2Gi"
boss__registry__persistent_volume_labels:
  kubernetes.io/cluster-service: "true"
  addonmanager.kubernetes.io/mode: Reconcile
  k8s-app: registry
  boss-part-of: registry
  version: "{{boss__registry__version}}"
boss__registry__version: 2.6
boss__registry__image_repo: "registry"
boss__registry__image_tag: "{{ boss__registry__version }}"
boss__registry__cpu_limit: 1000m
boss__registry__mem_limit: 500Mi
boss__registry__cpu_requests: 100m
boss__registry__mem_requests: 200Mi

boss__registry__service_account_labels:
    k8s-app: registry
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: registry
    version: "{{boss__registry__version}}"
boss__registry__cluster_role_labels:
    k8s-app: registry
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: registry
    version: "{{boss__registry__version}}"

boss__registry__cluster_role_binding_labels:
    k8s-app: registry
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: registry
    version: "{{boss__registry__version}}"

boss__registry__stateful_set_labels:
    k8s-app: registry
    version: "{{boss__registry__version}}"
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    boss-part-of: registry
boss__registry__stateful_set_spec_replicas: 1
boss__registry__stateful_set_spec_selector_match_labels:
        k8s-app: registry
        version: "{{boss__registry__version}}"
boss__registry__stateful_set_spec_template_metadata_labels:
        k8s-app: registry
        version: "{{boss__registry__version}}"
        kubernetes.io/cluster-service: "true"

boss__registry__persistent_volume_spec_capacity_storage: 10Gi
boss__registry__persistent_volume_spec_nfs_path: "{{path_to_network_disk}}/registry"
# TODO: FIXME, this needs to be dynamic going forward, but for now, we need to hardcode it
# boss__registry__nfs_master_node_ip: "{{ hostvars[groups[nfs_server_group][0]]['ansible_' + main_network_interface].ipv4.address }}"
boss__registry__nfs_master_node_ip: "{{ nfs_server_ip_override }}"

# ---
# local_release_dir: /tmp/releases

# # Used to only evaluate vars from download role
# skip_downloads: false

# # if this is set to true will only download files once. Doesn't work
# # on Container Linux by CoreOS unless the download_localhost is true and localhost
# # is running another OS type. Default compress level is 1 (fastest).
# download_run_once: False
# download_compress: 1

# # if this is set to true, uses the localhost for download_run_once mode
# # (requires docker and sudo to access docker). You may want this option for
# # local caching of docker images or for Container Linux by CoreOS cluster nodes.
# # Otherwise, uses the first node in the kube-master group to store images
# # in the download_run_once mode.
# download_localhost: False

# # Always pull images if set to True. Otherwise check by the repo's tag/digest.
# download_always_pull: False

# # Use the first kube-master if download_localhost is not set
# download_delegate: "{% if download_localhost %}localhost{% else %}{{groups['kube-master'][0]}}{% endif %}"

# # Versions
# kube_version: v1.9.5
# kubeadm_version: "{{ kube_version }}"
# etcd_version: v3.2.4
# # TODO(mattymo): Move calico versions to roles/network_plugins/calico/defaults
# # after migration to container download
# calico_version: "v2.6.8"
# calico_ctl_version: "v1.6.3"
# calico_cni_version: "v1.11.4"
# calico_policy_version: "v1.0.3"
# calico_rr_version: "v0.4.2"
# flannel_version: "v0.10.0"
# flannel_cni_version: "v0.3.0"
# istio_version: "0.2.6"
# vault_version: 0.8.1
# weave_version: 2.2.1
# pod_infra_version: 3.0
# contiv_version: 1.1.7
# cilium_version: "v1.0.0-rc8"

# # Download URLs
# istioctl_download_url: "https://storage.googleapis.com/istio-release/releases/{{ istio_version }}/istioctl/istioctl-linux"
# kubeadm_download_url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubeadm_version }}/bin/linux/amd64/kubeadm"
# vault_download_url: "https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_linux_amd64.zip"

# # Checksums
# istioctl_checksum: fd703063c540b8c0ab943f478c05ab257d88ae27224c746a27d0526ddbf7c370
# kubeadm_checksum: 12b6e9ac1624852b7c978bde70b9bde9ca0e4fc6581d09bddfb117bb41f93c74
# vault_binary_checksum: 3c4d70ba71619a43229e65c67830e30e050eab7a81ac6b28325ff707e5914188

# # Containers
# etcd_image_repo: "quay.io/coreos/etcd"
# etcd_image_tag: "{{ etcd_version }}"
# flannel_image_repo: "quay.io/coreos/flannel"
# flannel_image_tag: "{{ flannel_version }}"
# flannel_cni_image_repo: "quay.io/coreos/flannel-cni"
# flannel_cni_image_tag: "{{ flannel_cni_version }}"
# calicoctl_image_repo: "quay.io/calico/ctl"
# calicoctl_image_tag: "{{ calico_ctl_version }}"
# calico_node_image_repo: "quay.io/calico/node"
# calico_node_image_tag: "{{ calico_version }}"
# calico_cni_image_repo: "quay.io/calico/cni"
# calico_cni_image_tag: "{{ calico_cni_version }}"
# calico_policy_image_repo: "quay.io/calico/kube-controllers"
# calico_policy_image_tag: "{{ calico_policy_version }}"
# calico_rr_image_repo: "quay.io/calico/routereflector"
# calico_rr_image_tag: "{{ calico_rr_version }}"
# istio_proxy_image_repo: docker.io/istio/proxy
# istio_proxy_image_tag: "{{ istio_version }}"
# istio_proxy_init_image_repo: docker.io/istio/proxy_init
# istio_proxy_init_image_tag: "{{ istio_version }}"
# istio_ca_image_repo: docker.io/istio/istio-ca
# istio_ca_image_tag: "{{ istio_version }}"
# istio_mixer_image_repo: docker.io/istio/mixer
# istio_mixer_image_tag: "{{ istio_version }}"
# istio_pilot_image_repo: docker.io/istio/pilot
# istio_pilot_image_tag: "{{ istio_version }}"
# istio_proxy_debug_image_repo: docker.io/istio/proxy_debug
# istio_proxy_debug_image_tag: "{{ istio_version }}"
# istio_sidecar_initializer_image_repo: docker.io/istio/sidecar_initializer
# istio_sidecar_initializer_image_tag: "{{ istio_version }}"
# istio_statsd_image_repo: prom/statsd-exporter
# istio_statsd_image_tag: latest
# hyperkube_image_repo: "gcr.io/google-containers/hyperkube"
# hyperkube_image_tag: "{{ kube_version }}"
# pod_infra_image_repo: "gcr.io/google_containers/pause-amd64"
# pod_infra_image_tag: "{{ pod_infra_version }}"
# install_socat_image_repo: "xueshanf/install-socat"
# install_socat_image_tag: "latest"
# netcheck_version: "v1.0"
# netcheck_agent_img_repo: "quay.io/l23network/k8s-netchecker-agent"
# netcheck_agent_tag: "{{ netcheck_version }}"
# netcheck_server_img_repo: "quay.io/l23network/k8s-netchecker-server"
# netcheck_server_tag: "{{ netcheck_version }}"
# weave_kube_image_repo: "weaveworks/weave-kube"
# weave_kube_image_tag: "{{ weave_version }}"
# weave_npc_image_repo: "weaveworks/weave-npc"
# weave_npc_image_tag: "{{ weave_version }}"
# contiv_image_repo: "contiv/netplugin"
# contiv_image_tag: "{{ contiv_version }}"
# contiv_auth_proxy_image_repo: "contiv/auth_proxy"
# contiv_auth_proxy_image_tag: "{{ contiv_version }}"
# cilium_image_repo: "docker.io/cilium/cilium"
# cilium_image_tag: "{{ cilium_version }}"
# nginx_image_repo: nginx
# nginx_image_tag: 1.13
# dnsmasq_version: 2.78
# dnsmasq_image_repo: "andyshinn/dnsmasq"
# dnsmasq_image_tag: "{{ dnsmasq_version }}"
# kubedns_version: 1.14.8
# kubedns_image_repo: "gcr.io/google_containers/k8s-dns-kube-dns-amd64"
# kubedns_image_tag: "{{ kubedns_version }}"
# coredns_version: 1.1.0
# coredns_image_repo: "docker.io/coredns/coredns"
# coredns_image_tag: "{{ coredns_version }}"
# dnsmasq_nanny_image_repo: "gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64"
# dnsmasq_nanny_image_tag: "{{ kubedns_version }}"
# dnsmasq_sidecar_image_repo: "gcr.io/google_containers/k8s-dns-sidecar-amd64"
# dnsmasq_sidecar_image_tag: "{{ kubedns_version }}"
# dnsmasqautoscaler_version: 1.1.2
# dnsmasqautoscaler_image_repo: "gcr.io/google_containers/cluster-proportional-autoscaler-amd64"
# dnsmasqautoscaler_image_tag: "{{ dnsmasqautoscaler_version }}"
# kubednsautoscaler_version: 1.1.2
# kubednsautoscaler_image_repo: "gcr.io/google_containers/cluster-proportional-autoscaler-amd64"
# kubednsautoscaler_image_tag: "{{ kubednsautoscaler_version }}"
# test_image_repo: busybox
# test_image_tag: latest
# elasticsearch_version: "v2.4.1"
# elasticsearch_image_repo: "gcr.io/google_containers/elasticsearch"
# elasticsearch_image_tag: "{{ elasticsearch_version }}"
# fluentd_version: "1.22"
# fluentd_image_repo: "gcr.io/google_containers/fluentd-elasticsearch"
# fluentd_image_tag: "{{ fluentd_version }}"
# kibana_version: "v4.6.1"
# kibana_image_repo: "gcr.io/google_containers/kibana"
# kibana_image_tag: "{{ kibana_version }}"
# helm_version: "v2.8.1"
# helm_image_repo: "lachlanevenson/k8s-helm"
# helm_image_tag: "{{ helm_version }}"
# tiller_image_repo: "gcr.io/kubernetes-helm/tiller"
# tiller_image_tag: "{{ helm_version }}"
# vault_image_repo: "vault"
# vault_image_tag: "{{ vault_version }}"
# registry_image_repo: "registry"
# registry_image_tag: "2.6"
# registry_proxy_image_repo: "gcr.io/google_containers/kube-registry-proxy"
# registry_proxy_image_tag: "0.4"
# local_volume_provisioner_image_repo: "quay.io/external_storage/local-volume-provisioner"
# local_volume_provisioner_image_tag: "v2.0.0"
# cephfs_provisioner_image_repo: "quay.io/kubespray/cephfs-provisioner"
# cephfs_provisioner_image_tag: "92295a30"
# ingress_nginx_controller_image_repo: "quay.io/kubernetes-ingress-controller/nginx-ingress-controller"
# ingress_nginx_controller_image_tag: "0.12.0"
# ingress_nginx_default_backend_image_repo: "gcr.io/google_containers/defaultbackend"
# ingress_nginx_default_backend_image_tag: "1.4"
# cert_manager_version: "v0.2.3"
# cert_manager_controller_image_repo: "quay.io/jetstack/cert-manager-controller"
# cert_manager_controller_image_tag: "{{ cert_manager_version }}"
# cert_manager_ingress_shim_image_repo: "quay.io/jetstack/cert-manager-ingress-shim"
# cert_manager_ingress_shim_image_tag: "{{ cert_manager_version }}"

# downloads:
#   netcheck_server:
#     enabled: "{{ deploy_netchecker }}"
#     container: true
#     repo: "{{ netcheck_server_img_repo }}"
#     tag: "{{ netcheck_server_tag }}"
#     sha256: "{{ netcheck_server_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   netcheck_agent:
#     enabled: "{{ deploy_netchecker }}"
#     container: true
#     repo: "{{ netcheck_agent_img_repo }}"
#     tag: "{{ netcheck_agent_tag }}"
#     sha256: "{{ netcheck_agent_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   etcd:
#     enabled: true
#     container: true
#     repo: "{{ etcd_image_repo }}"
#     tag: "{{ etcd_image_tag }}"
#     sha256: "{{ etcd_digest_checksum|default(None) }}"
#     groups:
#       - etcd
#   kubeadm:
#     enabled: "{{ kubeadm_enabled }}"
#     file: true
#     version: "{{ kubeadm_version }}"
#     dest: "kubeadm"
#     sha256: "{{ kubeadm_checksum }}"
#     source_url: "{{ kubeadm_download_url }}"
#     url: "{{ kubeadm_download_url }}"
#     unarchive: false
#     owner: "root"
#     mode: "0755"
#     groups:
#       - k8s-cluster
#   istioctl:
#     enabled: "{{ istio_enabled }}"
#     file: true
#     version: "{{ istio_version }}"
#     dest: "istio/istioctl"
#     sha256: "{{ istioctl_checksum }}"
#     source_url: "{{ istioctl_download_url }}"
#     url: "{{ istioctl_download_url }}"
#     unarchive: false
#     owner: "root"
#     mode: "0755"
#     groups:
#       - kube-master
#   istio_proxy:
#     enabled: "{{ istio_enabled }}"
#     container: true
#     repo: "{{ istio_proxy_image_repo }}"
#     tag: "{{ istio_proxy_image_tag }}"
#     sha256: "{{ istio_proxy_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   istio_proxy_init:
#     enabled: "{{ istio_enabled }}"
#     container: true
#     repo: "{{ istio_proxy_init_image_repo }}"
#     tag: "{{ istio_proxy_init_image_tag }}"
#     sha256: "{{ istio_proxy_init_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   istio_ca:
#     enabled: "{{ istio_enabled }}"
#     container: true
#     repo: "{{ istio_ca_image_repo }}"
#     tag: "{{ istio_ca_image_tag }}"
#     sha256: "{{ istio_ca_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   istio_mixer:
#     enabled: "{{ istio_enabled }}"
#     container: true
#     repo: "{{ istio_mixer_image_repo }}"
#     tag: "{{ istio_mixer_image_tag }}"
#     sha256: "{{ istio_mixer_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   istio_pilot:
#     enabled: "{{ istio_enabled }}"
#     container: true
#     repo: "{{ istio_pilot_image_repo }}"
#     tag: "{{ istio_pilot_image_tag }}"
#     sha256: "{{ istio_pilot_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   istio_proxy_debug:
#     enabled: "{{ istio_enabled }}"
#     container: true
#     repo: "{{ istio_proxy_debug_image_repo }}"
#     tag: "{{ istio_proxy_debug_image_tag }}"
#     sha256: "{{ istio_proxy_debug_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   istio_sidecar_initializer:
#     enabled: "{{ istio_enabled }}"
#     container: true
#     repo: "{{ istio_sidecar_initializer_image_repo }}"
#     tag: "{{ istio_sidecar_initializer_image_tag }}"
#     sha256: "{{ istio_sidecar_initializer_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   istio_statsd:
#     enabled: "{{ istio_enabled }}"
#     container: true
#     repo: "{{ istio_statsd_image_repo }}"
#     tag: "{{ istio_statsd_image_tag }}"
#     sha256: "{{ istio_statsd_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   hyperkube:
#     enabled: true
#     container: true
#     repo: "{{ hyperkube_image_repo }}"
#     tag: "{{ hyperkube_image_tag }}"
#     sha256: "{{ hyperkube_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   cilium:
#     enabled: "{{ kube_network_plugin == 'cilium' }}"
#     container: true
#     repo: "{{ cilium_image_repo }}"
#     tag: "{{ cilium_image_tag }}"
#     sha256: "{{ cilium_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   flannel:
#     enabled: "{{ kube_network_plugin == 'flannel' or kube_network_plugin == 'canal' }}"
#     container: true
#     repo: "{{ flannel_image_repo }}"
#     tag: "{{ flannel_image_tag }}"
#     sha256: "{{ flannel_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   flannel_cni:
#     enabled: "{{ kube_network_plugin == 'flannel' }}"
#     container: true
#     repo: "{{ flannel_cni_image_repo }}"
#     tag: "{{ flannel_cni_image_tag }}"
#     sha256: "{{ flannel_cni_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   calicoctl:
#     enabled: "{{ kube_network_plugin == 'calico' or kube_network_plugin == 'canal' }}"
#     container: true
#     repo: "{{ calicoctl_image_repo }}"
#     tag: "{{ calicoctl_image_tag }}"
#     sha256: "{{ calicoctl_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   calico_node:
#     enabled: "{{ kube_network_plugin == 'calico' or kube_network_plugin == 'canal' }}"
#     container: true
#     repo: "{{ calico_node_image_repo }}"
#     tag: "{{ calico_node_image_tag }}"
#     sha256: "{{ calico_node_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   calico_cni:
#     enabled: "{{ kube_network_plugin == 'calico' or kube_network_plugin == 'canal' }}"
#     container: true
#     repo: "{{ calico_cni_image_repo }}"
#     tag: "{{ calico_cni_image_tag }}"
#     sha256: "{{ calico_cni_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   calico_policy:
#     enabled: "{{ enable_network_policy or kube_network_plugin == 'canal' }}"
#     container: true
#     repo: "{{ calico_policy_image_repo }}"
#     tag: "{{ calico_policy_image_tag }}"
#     sha256: "{{ calico_policy_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   calico_rr:
#     enabled: "{{ peer_with_calico_rr is defined and peer_with_calico_rr and kube_network_plugin == 'calico' }}"
#     container: true
#     repo: "{{ calico_rr_image_repo }}"
#     tag: "{{ calico_rr_image_tag }}"
#     sha256: "{{ calico_rr_digest_checksum|default(None) }}"
#     groups:
#       - calico-rr
#   weave_kube:
#     enabled: "{{ kube_network_plugin == 'weave' }}"
#     container: true
#     repo: "{{ weave_kube_image_repo }}"
#     tag: "{{ weave_kube_image_tag }}"
#     sha256: "{{ weave_kube_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   weave_npc:
#     enabled: "{{ kube_network_plugin == 'weave' }}"
#     container: true
#     repo: "{{ weave_npc_image_repo }}"
#     tag: "{{ weave_npc_image_tag }}"
#     sha256: "{{ weave_npc_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   contiv:
#     enabled: "{{ kube_network_plugin == 'contiv' }}"
#     container: true
#     repo: "{{ contiv_image_repo }}"
#     tag: "{{ contiv_image_tag }}"
#     sha256: "{{ contiv_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   contiv_auth_proxy:
#     enabled: "{{ kube_network_plugin == 'contiv' }}"
#     container: true
#     repo: "{{ contiv_auth_proxy_image_repo }}"
#     tag: "{{ contiv_auth_proxy_image_tag }}"
#     sha256: "{{ contiv_auth_proxy_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   pod_infra:
#     enabled: true
#     container: true
#     repo: "{{ pod_infra_image_repo }}"
#     tag: "{{ pod_infra_image_tag }}"
#     sha256: "{{ pod_infra_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   install_socat:
#     enabled: "{{ ansible_os_family in ['CoreOS', 'Container Linux by CoreOS'] }}"
#     container: true
#     repo: "{{ install_socat_image_repo }}"
#     tag: "{{ install_socat_image_tag }}"
#     sha256: "{{ install_socat_digest_checksum|default(None) }}"
#     groups:
#       - k8s-cluster
#   nginx:
#     enabled: "{{ loadbalancer_apiserver_localhost }}"
#     container: true
#     repo: "{{ nginx_image_repo }}"
#     tag: "{{ nginx_image_tag }}"
#     sha256: "{{ nginx_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   dnsmasq:
#     enabled: "{{ dns_mode == 'dnsmasq_kubedns' }}"
#     container: true
#     repo: "{{ dnsmasq_image_repo }}"
#     tag: "{{ dnsmasq_image_tag }}"
#     sha256: "{{ dnsmasq_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   kubedns:
#     enabled: "{{ dns_mode in ['kubedns', 'dnsmasq_kubedns'] }}"
#     container: true
#     repo: "{{ kubedns_image_repo }}"
#     tag: "{{ kubedns_image_tag }}"
#     sha256: "{{ kubedns_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   coredns:
#     enabled: "{{ dns_mode in ['coredns', 'coredns_dual'] }}"
#     container: true
#     repo: "{{ coredns_image_repo }}"
#     tag: "{{ coredns_image_tag }}"
#     sha256: "{{ coredns_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   dnsmasq_nanny:
#     enabled: "{{ dns_mode in ['kubedns', 'dnsmasq_kubedns'] }}"
#     container: true
#     repo: "{{ dnsmasq_nanny_image_repo }}"
#     tag: "{{ dnsmasq_nanny_image_tag }}"
#     sha256: "{{ dnsmasq_nanny_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   dnsmasq_sidecar:
#     enabled: "{{ dns_mode in ['kubedns', 'dnsmasq_kubedns'] }}"
#     container: true
#     repo: "{{ dnsmasq_sidecar_image_repo }}"
#     tag: "{{ dnsmasq_sidecar_image_tag }}"
#     sha256: "{{ dnsmasq_sidecar_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   kubednsautoscaler:
#     enabled: "{{ dns_mode in ['kubedns', 'dnsmasq_kubedns'] }}"
#     container: true
#     repo: "{{ kubednsautoscaler_image_repo }}"
#     tag: "{{ kubednsautoscaler_image_tag }}"
#     sha256: "{{ kubednsautoscaler_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   testbox:
#     enabled: false
#     container: true
#     repo: "{{ test_image_repo }}"
#     tag: "{{ test_image_tag }}"
#     sha256: "{{ testbox_digest_checksum|default(None) }}"
#   elasticsearch:
#     enabled: "{{ efk_enabled }}"
#     container: true
#     repo: "{{ elasticsearch_image_repo }}"
#     tag: "{{ elasticsearch_image_tag }}"
#     sha256: "{{ elasticsearch_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   fluentd:
#     enabled: "{{ efk_enabled }}"
#     container: true
#     repo: "{{ fluentd_image_repo }}"
#     tag: "{{ fluentd_image_tag }}"
#     sha256: "{{ fluentd_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   kibana:
#     enabled: "{{ efk_enabled }}"
#     container: true
#     repo: "{{ kibana_image_repo }}"
#     tag: "{{ kibana_image_tag }}"
#     sha256: "{{ kibana_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   helm:
#     enabled: "{{ helm_enabled }}"
#     container: true
#     repo: "{{ helm_image_repo }}"
#     tag: "{{ helm_image_tag }}"
#     sha256: "{{ helm_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   tiller:
#     enabled: "{{ helm_enabled }}"
#     container: true
#     repo: "{{ tiller_image_repo }}"
#     tag: "{{ tiller_image_tag }}"
#     sha256: "{{ tiller_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   vault:
#     enabled: "{{ cert_management == 'vault' }}"
#     container: "{{ vault_deployment_type != 'host' }}"
#     file: "{{ vault_deployment_type == 'host' }}"
#     dest: "vault/vault_{{ vault_version }}_linux_amd64.zip"
#     mode: "0755"
#     owner: "vault"
#     repo: "{{ vault_image_repo }}"
#     sha256: "{{ vault_binary_checksum if vault_deployment_type == 'host' else vault_digest_checksum|d(none) }}"
#     source_url: "{{ vault_download_url }}"
#     tag: "{{ vault_image_tag }}"
#     unarchive: true
#     url: "{{ vault_download_url }}"
#     version: "{{ vault_version }}"
#     groups:
#       - vault
#   registry:
#     enabled: "{{ registry_enabled }}"
#     container: true
#     repo: "{{ registry_image_repo }}"
#     tag: "{{ registry_image_tag }}"
#     sha256: "{{ registry_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   registry_proxy:
#     enabled: "{{ registry_enabled }}"
#     container: true
#     repo: "{{ registry_proxy_image_repo }}"
#     tag: "{{ registry_proxy_image_tag }}"
#     sha256: "{{ registry_proxy_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   local_volume_provisioner:
#     enabled: "{{ local_volume_provisioner_enabled }}"
#     container: true
#     repo: "{{ local_volume_provisioner_image_repo }}"
#     tag: "{{ local_volume_provisioner_image_tag }}"
#     sha256: "{{ local_volume_provisioner_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   cephfs_provisioner:
#     enabled: "{{ cephfs_provisioner_enabled }}"
#     container: true
#     repo: "{{ cephfs_provisioner_image_repo }}"
#     tag: "{{ cephfs_provisioner_image_tag }}"
#     sha256: "{{ cephfs_provisioner_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   ingress_nginx_controller:
#     enabled: "{{ ingress_nginx_enabled }}"
#     container: true
#     repo: "{{ ingress_nginx_controller_image_repo }}"
#     tag: "{{ ingress_nginx_controller_image_tag }}"
#     sha256: "{{ ingress_nginx_controller_digest_checksum|default(None) }}"
#     groups:
#       - kube-ingress
#   ingress_nginx_default_backend:
#     enabled: "{{ ingress_nginx_enabled }}"
#     container: true
#     repo: "{{ ingress_nginx_default_backend_image_repo }}"
#     tag: "{{ ingress_nginx_default_backend_image_tag }}"
#     sha256: "{{ ingress_nginx_default_backend_digest_checksum|default(None) }}"
#     groups:
#       - kube-ingress
#   cert_manager_controller:
#     enabled: "{{ cert_manager_enabled }}"
#     container: true
#     repo: "{{ cert_manager_controller_image_repo }}"
#     tag: "{{ cert_manager_controller_image_tag }}"
#     sha256: "{{ cert_manager_controller_digest_checksum|default(None) }}"
#     groups:
#       - kube-node
#   cert_manager_ingress_shim:
#     enabled: "{{ cert_manager_enabled }}"
#     container: true
#     repo: "{{ cert_manager_ingress_shim_image_repo }}"
#     tag: "{{ cert_manager_ingress_shim_image_tag }}"
#     sha256: "{{ cert_manager_ingress_shim_digest_checksum|default(None) }}"
#     groups:
#       - kube-node

# download_defaults:
#   container: false
#   file: false
#   repo: None
#   tag: None
#   enabled: false
#   dest: None
#   version: None
#   url: None
#   unarchive: false
#   owner: kube
#   mode: None



# ---
# elasticsearch_cpu_limit: 1000m
# elasticsearch_mem_limit: 0M
# elasticsearch_cpu_requests: 100m
# elasticsearch_mem_requests: 0M
# elasticsearch_service_port: 9200
