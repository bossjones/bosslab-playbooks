#!/usr/bin/env bash

set -e -o pipefail

# Autodetect the OS
detect_OS() {
  if [ "$(uname)" == "Darwin" ]; then  # macOS
    echo 'Looks like a macOS'
    readlink_cmd="greadlink"
    dirname_cmd="gdirname"
    gawk_cmd="awk"
    sed_cmd="gsed"
    find_cmd="gfind"
    netcat_cmd="/usr/local/bin/netcat"
    netcat_flags="-c --wait=2 -v "
  elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then  # Linux
    echo 'Looks like linux'
    readlink_cmd="readlink"
    dirname_cmd="dirname"
    gawk_cmd="gawk"
    sed_cmd="sed"
    find_cmd="find"
    netcat_cmd="/bin/nc"
    netcat_flags="-q1 -w1 -v "
  elif [ "$(expr substr $OS 1 3)" == "Win" ]; then  # Windows
    echo 'Looks like windows - hope you have git bash or cygwin otherwise this wont work!'
    readlink_cmd="readlink"
    dirname_cmd="dirname"
    gawk_cmd="gawk"
    sed_cmd="sed"
    find_cmd="find"
  fi
}

detect_OS


host_name=$1
log_port=${2:=5140}

if [[ $# -ne 1 ]]; then
    echo "Usage: ${FUNCNAME[0]} <host name>"
    echo "syslog-netcat-test fluent-bit-centralized.scarlettlab.com"
    echo "-- or --"
    echo "syslog-netcat-test fluent-bit-centralized.scarlettlab.com 5140"
    exit 1
fi

# <150> represents facility and severity following RC3164 Syslog header use the current timestamp and a random hostname
# echo "<150>`env LANG=us_US.UTF-8 date "+%b %d %H:%M:%S"` host`date +%s` service: my special message goes here"

# SOURCE: https://nelsonslog.wordpress.com/2013/04/19/faking-out-remote-syslog-via-netcat/
# Replace localhost with the syslog server, of course. “sourcehost” is a string identifying the source; can be anything. The 14 is a combination of the severity (low 3 bits) and the service (high N bits). 14 = 8 + 6 which means “user message, informational”. RFC 3164 has the relevant detail. The syslog protocol is remarkably ad hoc; you can leave out the priority and it should still work. And there’s a provision for adding timestamps to the source message too. Note that syslog may suppress duplicate messages, so that may be why subsequent tests don’t show up. Unfortunately the BusyBox version of nc bundled in to Tomato doesn’t have the -u flag.

# echo "message" | nc -v "${host_name}" ${log_port}

_message="<150>$(env LANG=us_US.UTF-8 date "+%b %d %H:%M:%S") $(hostname) syslog-netcat-test[$$]: testing baby"

echo ${_message}

# <PRI>TIMESTAMP HOSTNAME APP-NAME[PROCID]: sourcetype="SOURCETYPE" key1="val1" key2="val2" etc.

echo ${_message} | ${netcat_cmd} ${netcat_flags} "${host_name}" ${log_port}
# echo '<14>sourcehost message text' | nc -v "${host_name}" ${log_port}
# echo '<14>sourcehost message text' | nc -v -t "${host_name}" ${log_port}
# echo '<14>sourcehost message text' | nc -v -t "${host_name}" 80

# echo "<150>`env LANG=us_US.UTF-8 date "+%b %d %H:%M:%S"` host`date +%s` service: my special message goes here" | netcat "${host_name}" -u 80 -w 1
