---
# - set_fact:
#     has_bastion: "{{ 'bastion' in groups['all'] }}"

# - set_fact:
#     bastion_ip: "{{ hostvars['bastion']['ansible_host'] }}"
#   when: has_bastion

# As we are actually running on localhost, the ansible_ssh_user is your local user when you try to use it directly
# To figure out the real ssh user, we delegate this task to the bastion and store the ansible_user in real_user
# - name: 'generate-ssh-config | set_fact - real_user'
#   set_fact:
#     real_user: "{{ ansible_user }}"
#   delegate_to: local
#   # when: has_bastion

- name: 'generate-ssh-config | set_fact - ssh_as_user'
  set_fact:
    ssh_as_user: "{{ boss__generate__ssh__config__user }}"
  # delegate_to: local
  # when: has_bastion

- name: 'generate-ssh-config | ssh_config'
  become: false
  template:
    src: ssh_config.j2
    dest: "{{ base_dir_path }}/ssh_config.{{ cluster }}.conf"
  # when: has_bastion
