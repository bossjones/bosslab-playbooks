#https://github.com/kubernetes/kubernetes/blob/master/examples/volumes/nfs/provisioner/nfs-server-gce-pv.yaml
#https://github.com/kubernetes-incubator/nfs-provisioner
# https://github.com/kubernetes-incubator/external-storage/tree/master/nfs
---
# SOURCE: https://github.com/kubernetes-incubator/external-storage/blob/master/nfs/deploy/kubernetes/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-provisioner-runner
  namespace: kube-system
  # labels:
  #   addonmanager.kubernetes.io/mode: Reconcile
  #   app.kubernetes.io/name: nfs-provisioner-runner
  #   app.kubernetes.io/part-of: nfs-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get"]
  - apiGroups: ["extensions"]
    resources: ["podsecuritypolicies"]
    resourceNames: ["nfs-provisioner"]
    verbs: ["use"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfs-provisioner
  namespace: kube-system
  # # replace with namespace where provisioner is deployed
  # namespace: default
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-nfs-provisioner
subjects:
  - kind: ServiceAccount
    name: nfs-provisioner
    # namespace: default
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: nfs-provisioner-runner
  apiGroup: rbac.authorization.k8s.io


---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-nfs-provisioner
  # namespace: default
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-nfs-provisioner
subjects:
  - kind: ServiceAccount
    name: nfs-provisioner
    # replace with namespace where provisioner is deployed
    # namespace: default
    namespace: kube-system
roleRef:
  kind: Role
  name: leader-locking-nfs-provisioner
  apiGroup: rbac.authorization.k8s.io



---
kind: Service
apiVersion: v1
metadata:
  name: nfs-provisioner
  namespace: kube-system
  labels:
    app: nfs-provisioner
spec:
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
    - name: rpcbind-udp
      port: 111
      protocol: UDP
  selector:
    app: nfs-provisioner
---
# TODO: Follow this guide - https://github.com/kubernetes-incubator/external-storage/blob/master/nfs/docs/deployment.md
# SOURCE: https://kubernetes.io/docs/tasks/run-application/run-single-instance-stateful-application/
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: nfs-provisioner
  namespace: kube-system
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nfs-provisioner
    spec:
      serviceAccount: nfs-provisioner
      # SOURCE: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
      nodeSelector:
        kubernetes.io/hostname: "borg-queen-01"
      # DISABLED # nodeSelector:
      # DISABLED #   #kubernetes.io/hostname: machine01
      # DISABLED #   node-role.kubernetes.io/master: ""
      # DISABLED # tolerations:
      # DISABLED #   - key: "node-role.kubernetes.io/master"
      # DISABLED #     effect: NoSchedule
      containers:
        - name: nfs-provisioner
          image: quay.io/kubernetes_incubator/nfs-provisioner:v1.0.9
          ports:
            - name: nfs
              containerPort: 2049
            - name: mountd
              containerPort: 20048
            - name: rpcbind
              containerPort: 111
            - name: rpcbind-udp
              containerPort: 111
              protocol: UDP
          securityContext:
            capabilities:
              add:
                - DAC_READ_SEARCH
                - SYS_RESOURCE
          ## Persistent Volume Storage Class
          ## If defined, storageClassName: <storageClass>
          ## If set to "-", storageClassName: "", which disables dynamic provisioning
          ## If undefined (the default) or set to null, no storageClassName spec is
          ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
          ##   GKE, AWS & OpenStack)
          ##
          args:
            # - "-provisioner={{ nfs_k8s.provisioner }}"
            - "-provisioner=com.scarlettlab.nfs"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_NAME
              value: nfs-provisioner
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: export-volume
              mountPath: /export
      volumes:
        - name: export-volume
          hostPath:
            # FIXME: Use ansible/jinja2 to have this rendered dynamically # provisioner: {{ nfs_k8s.provisioner }}
            # NOTE: In the future use jinja to render this
            # path: {{ nfs_k8s.host_path }}
            path: /mnt/publicdata
---
kind: StorageClass
# apiVersion: storage.k8s.io/v1beta1
apiVersion: storage.k8s.io/v1
metadata:
  # FIXME: Use ansible/jinja2 to have this rendered dynamically # provisioner: {{ nfs_k8s.provisioner }}
  # name: "{{ nfs_k8s.provisioner }}"
  name: "com.scarlettlab.nfs"
  namespace: kube-system
  annotations:
    # storageclass.beta.kubernetes.io/is-default-class: "{{ nfs_k8s.is_default_class | default('true') }}"
    # INFO: https://kubernetes.io/docs/tasks/administer-cluster/change-default-storage-class/
    # storageclass.beta.kubernetes.io/is-default-class: "true"
    storageclass.kubernetes.io/is-default-class: "true"
  labels:
    kubernetes.io/cluster-service: "true"
# FIXME: Use ansible/jinja2 to have this rendered dynamically # provisioner: {{ nfs_k8s.provisioner }}
provisioner: com.scarlettlab.nfs
#parameters:
mountOptions:
  # - vers=4.1
  - vers=4

# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: nfs
#   namespace: kube-system
#   annotations:
#     volume.beta.kubernetes.io/storage-class: "com.scarlettlab.nfs"
# spec:
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 1Mi
