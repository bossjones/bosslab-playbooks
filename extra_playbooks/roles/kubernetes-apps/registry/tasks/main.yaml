---

# htpasswd -Bbn admin admin123 | base64

- name: "registry | Create httpasswd: htpasswd -Bbn admin admin123"

  shell: |
    htpasswd -Bbn admin admin123 | tee htpasswd.base64
  # args:
  #   creates: 'htpasswd.base64'
  register: boss__registry__htpasswd_base64_results

- name: "registry | debug fact boss__registry__htpasswd_base64_results"
  debug: msg="{{boss__registry__htpasswd_base64_results}}"

- name: "registry | set base64 fact"
  set_fact:
    htpasswd_base64: '{{boss__registry__htpasswd_base64_results.stdout | b64encode }}'

- name: "registry | Create directory: {{boss__registry__manifest_path}}"
  file:
    path: "{{boss__registry__manifest_path}}"
    state: directory

- name: "registry | Write manifests (RBAC)"
  template:
    src: "{{ item }}.j2"
    dest: "{{ boss__registry__manifest_path }}/{{ item }}"
  with_items:
    - "registry-ingress.yml"
    - "registry-ns.yml"
    - "0registry-pvc.yml"
    - "registry-rs.yml"
    - "registry-svc.yml"
    - "registry-svc-statefulset.yml"
    - "99registry-cert-tls.yml"
    - "99registry-from-helm.yml"


# NOTE: example from https://github.com/hello-k8s/hello-k8s/blob/a6705bb5d889b5bfcf93caf312af9f8034f388bd/config/registry/registry.yaml
# kind: PersistentVolume
# apiVersion: v1
# metadata:
#   name: registry
#   labels:
#     type: local
# spec:
#   capacity:
#     storage: 4Gi
#   accessModes:
#     - ReadWriteOnce
#   claimRef:
#     namespace: default
#     name: registry-claim
#   hostPath:
#     path: "/data/registry/"

# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: registry-claim
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 4Gi
# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: registry
#   labels:
#     app: registry
# spec:
#   ports:
#     - port: 5000
#       targetPort: 5000
#       nodePort: 30400
#       name: registry
#   selector:
#     app: registry
#     tier: registry
#   type: NodePort
# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: registry-ui
#   labels:
#     app: registry
# spec:
#   ports:
#     - port: 8080
#       targetPort: 80
#       name: registry
#   selector:
#     app: registry
#     tier: registry
#   type: NodePort
# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: registry
#   labels:
#     app: registry
# spec:
#   selector:
#     matchLabels:
#       app: registry
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       labels:
#         app: registry
#         tier: registry
#     spec:
#       containers:
#         - image: registry:2
#           name: registry
#           volumeMounts:
#             - name: docker
#               mountPath: /var/run/docker.sock
#             - name: registry-persistent-storage
#               mountPath: /var/lib/registry
#           ports:
#             - containerPort: 5000
#               name: registry
#         - name: registryui
#           image: joxit/docker-registry-ui:latest
# #          image: hyper/docker-registry-web:latest
#           ports:
#             - containerPort: 80
#           env:
#             - name: REGISTRY_URL
#               value: http://registry:5000
#             - name: REGISTRY_TITLE
#               value: Hello K8S registry
#       volumes:
#         - name: docker
#           hostPath:
#             path: /var/run/docker.sock
#         - name: registry-persistent-storage
#           persistentVolumeClaim:
#             claimName: registry-claim
