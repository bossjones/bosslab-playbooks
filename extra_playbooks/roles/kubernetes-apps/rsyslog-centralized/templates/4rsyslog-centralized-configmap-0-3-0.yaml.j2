# {{ansible_managed}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{boss__rsyslog__centralized__shared_name}}-config-0-3-0
  namespace: {{boss__rsyslog__centralized__namespace_name}}
  labels:
    k8s-app: {{boss__rsyslog__centralized__shared_name}}
data:
  rsyslog.conf: |-
{% if boss__rsyslog__centralized__rsyslog_conf_config_map is defined %}
{{ boss__rsyslog__centralized__rsyslog_conf_config_map | indent( width=4, indentfirst=True,blank=True) }}
{% endif %}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{boss__rsyslog__centralized__shared_name}}-config-dot-d-0-3-0
  namespace: {{boss__rsyslog__centralized__namespace_name}}
  labels:
    k8s-app: {{boss__rsyslog__centralized__shared_name}}
data:
  log_to_files.conf: |-

    # logging to files in {{boss__rsyslog__centralized__path_to_logs_inside_container}}

    template(name="log_to_files_dynafile" type="string" string=`echo $LOGFILES_STORE`)
    ruleset(name="log_to_files") {
      {{boss__rsyslog__centralized__path_to_logs_inside_container}}/debug;RSYSLOG_DebugFormat
      action(type="omfile" dynafile="log_to_files_dynafile" name="log_to_logfiles")
    }


  log_to_logsene.conf: |-
    # config snippet for the Logsene service
    #   https://sematext.com/logsene/

    template(name="logsene_json" type="list") {
        constant(value="{")
        constant(value="\"@timestamp\":\"")      property(name="timereported" dateFormat="rfc3339")
        constant(value="\",\"host\":\"")         property(name="hostname")
        constant(value="\",\"severity\":\"")     property(name="syslogseverity-text" caseConversion="upper")
        constant(value="\",\"facility\":\"")     property(name="syslogfacility-text")
        constant(value="\",\"syslog-tag\":\"")   property(name="syslogtag" format="json")
        constant(value="\",\"source\":\"")       property(name="app-name" format="json")
        constant(value="\",")                    property(name="$!all-json" position.from="2")
    }

    template(name="logsene_plain" type="list") {
        constant(value="{")
        constant(value="\"@timestamp\":\"")      property(name="timereported" dateFormat="rfc3339")
        constant(value="\",\"host\":\"")         property(name="hostname")
        constant(value="\",\"severity\":\"")     property(name="syslogseverity-text" caseConversion="upper")
        constant(value="\",\"facility\":\"")     property(name="syslogfacility-text")
        constant(value="\",\"syslog-tag\":\"")   property(name="syslogtag" format="json")
        constant(value="\",\"source\":\"")       property(name="app-name" format="json")
        constant(value="\",\"message\":\"")      property(name="msg" format="json")
        constant(value="\"}")
    }


    ruleset(name="log_to_logsene"
      queue.type="LinkedList" queue.dequeueBatchSize="2000"
      queue.size="100000"  # do not use a too-high values, else we get trouble with 10s shutdown period!
      queue.spoolDirectory="{{boss__rsyslog__centralized__path_to_work_inside_container}}"
      queue.filename="q_log_to_logsene" queue.maxfilesize="100m" queue.maxdiskspace="2g"
      queue.saveonshutdown="on"
      ) {
      action(name="main_cee_parser" type="mmjsonparse")
      if $parsesuccess == "OK" then {
        action( name="logsene_json"
          type="omelasticsearch"
          server=`echo $LOGSENE_URL`
          serverport="443"
          usehttps="on"
          template="logsene_json"
          searchIndex=`echo $LOGSENE_TOKEN`
          searchType="syslog-cee"
          bulkmode="on"
          action.resumeRetryCount="5"
          action.resumeInterval="60"
          )
      } else {
        action(	name="logsene_plain"
          type="omelasticsearch"
          server=`echo $LOGSENE_URL`
          serverport="443"
          usehttps="on"
          template="logsene_plain"
          searchIndex=`echo $LOGSENE_TOKEN`
          searchType="syslog"
          bulkmode="on"
          action.resumeRetryCount="5"
          action.resumeInterval="60"
        )
      }
    }


  log_to_stdout.conf: |-
    *.* :omstdout:

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{boss__rsyslog__centralized__shared_name}}-container-config-0-3-0
  namespace: {{boss__rsyslog__centralized__namespace_name}}
  labels:
    k8s-app: {{boss__rsyslog__centralized__shared_name}}
data:
  container_config: |-
{% if boss__rsyslog__centralized__container_config_config_map is defined %}
{{ boss__rsyslog__centralized__container_config_config_map | indent( width=4, indentfirst=True,blank=True) }}
{% endif %}


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{boss__rsyslog__centralized__shared_name}}-logrotate-0-3-0
  namespace: {{boss__rsyslog__centralized__namespace_name}}
  labels:
    k8s-app: {{boss__rsyslog__centralized__shared_name}}
data:
  syslog: |-
    # This file created from k8s configmap
    # the mail log files are used by all syslog daemons
    # the news log files are used by all syslog daemons
    {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/warn {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/allmessages {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/localmessages
    {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/mail {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/mail.info {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/mail.warn {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/mail.err
    {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/news/news.crit {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/news/news.err {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/news/news.notice
    {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/cron {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/secure
    {
        compress
        dateext
        maxage 365
        rotate 45
        missingok
        notifempty
        size +4096k
        create 640 root root
        sharedscripts
        postrotate
            /bin/kill -HUP `ps aux | grep rsyslog.conf | cut -d " " -f1` 2> /dev/null || true
        endscript
    }

    # SOURCE: https://github.com/dcv-cloud/dcv-kubernetes/blob/50221c0fb3ee7b2f799930b336662ab1d896f871/kubeManifests/infra-repo-197/datafeed/addConfigMapDatafeed.yaml
    {{boss__rsyslog__centralized__path_to_logs_inside_container}}/client_logs/*/messages
    {
        hourly
        rotate 5
        create
        dateext
        sharedscripts
        postrotate
            /bin/kill -HUP `ps aux | grep rsyslog.conf | cut -d " " -f1` 2> /dev/null || true
        endscript
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{boss__rsyslog__centralized__shared_name}}-crontab-0-3-0
  namespace: {{boss__rsyslog__centralized__namespace_name}}
  labels:
    k8s-app: {{boss__rsyslog__centralized__shared_name}}
data:
  crontab: |-
    SHELL=/bin/bash
    PATH=/sbin:/bin:/usr/sbin:/usr/bin
    MAILTO=root
    # For details see man 4 crontabs
    # Example of job definition:
    # .---------------- minute (0 - 59)
    # |  .------------- hour (0 - 23)
    # |  |  .---------- day of month (1 - 31)
    # |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
    # |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
    # |  |  |  |  |
    # *  *  *  *  * user-name  command to be executed
    0 0 * * * root /usr/sbin/logrotate -s /var/lib/logrotate/logrotate.status /etc/logrotate.conf

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{boss__rsyslog__centralized__shared_name}}-grok-pattern-0-3-0
  namespace: {{boss__rsyslog__centralized__namespace_name}}
  labels:
    k8s-app: {{boss__rsyslog__centralized__shared_name}}
data:
  pattern.yml: |-
    # SOURCE: https://github.com/effertzdv/elasticstack/blob/92c6332265f1d83dfc282b30d415bcd4f8917846/logstash/pipeline/logstash.conf
    # SOURCE: https://github.com/effertzdv/elasticstack/blob/92c6332265f1d83dfc282b30d415bcd4f8917846/logstash/patterns/pattern.yml
    MAC (?:%{CISCOMAC}|%{WINDOWSMAC}|%{COMMONMAC})
    CISCOMAC (?:(?:[A-Fa-f0-9]{4}\.){2}[A-Fa-f0-9]{4})
    WINDOWSMAC (?:(?:[A-Fa-f0-9]{2}-){5}[A-Fa-f0-9]{2})
    COMMONMAC (?:(?:[A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2})
    UNIFI_FW [0-9]+\.[0-9]+\.[0-9]+\.[0-9]+
    UNIFI_DEV_TYPE \s?(\("%{WORD:unifi_type},%{WORD:unifi_ap_mac},v%{UNIFI_FW:unifi_firmware}"\))?
    UNIFI_EVENT_TYPE (IEEE 802\.11|WPA|WEP)
    UNIFI_CUSTOM_EVENT (wevent.ubnt_custom_event\(\): %{WORD:CUSTOM_UNFI_EVENT} %{WORD:unifi_interface}: %{MAC:unifi_sta_mac} \/ %{GREEDYDATA:CUSTOM_UNIFI_EVENT_DATA})
