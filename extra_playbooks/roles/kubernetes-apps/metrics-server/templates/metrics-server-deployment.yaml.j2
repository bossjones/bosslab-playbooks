# SOURCE: https://github.com/kubernetes-incubator/metrics-server/tree/master/deploy/1.8%2B
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "metrics-server"
    boss-part-of: metrics-server
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "metrics-server"
    boss-part-of: metrics-server
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server
  template:
    metadata:
      name: metrics-server
      labels:
        k8s-app: metrics-server
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: Reconcile
        kubernetes.io/name: "metrics-server"
        boss-part-of: metrics-server
    spec:
      serviceAccountName: metrics-server
      volumes:
      # # mount in tmp so we can safely use from-scratch images and/or read-only containers
      # - name: tmp-dir
      #   emptyDir: {}
      # NFS4 version
      # - emptyDir: {}
      #   name: grafana-storage
      - name: tmp-dir
        persistentVolumeClaim:
          claimName: tmp-dir-pvc

      containers:
      - name: metrics-server
        image: k8s.gcr.io/metrics-server-amd64:v0.3.1
        command:
        - /metrics-server
        - --kubelet-preferred-address-types=InternalIP
        - --kubelet-insecure-tls
        - --logtostderr
        - --v=2
        # image: k8s.gcr.io/metrics-server-amd64:v0.3.0
        securityContext:
          # runAsNonRoot: true
          # runAsUser: 65534
          privileged: true
        imagePullPolicy: Always
        volumeMounts:
        - name: tmp-dir
          mountPath: /tmp

