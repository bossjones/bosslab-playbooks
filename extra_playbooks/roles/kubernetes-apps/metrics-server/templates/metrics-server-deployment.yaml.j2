# SOURCE: https://github.com/kubernetes-incubator/metrics-server/tree/master/deploy/1.8%2B
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metrics-server-config
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: EnsureExists
data:
  NannyConfiguration: |-
    apiVersion: nannyconfig/v1alpha1
    kind: NannyConfiguration
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "metrics-server"
    boss-part-of: metrics-server
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "metrics-server"
    boss-part-of: metrics-server
    version: v0.3.1
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server
  replicas: 2
  template:
    metadata:
      name: metrics-server
      labels:
        k8s-app: metrics-server
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: Reconcile
        kubernetes.io/name: "metrics-server"
        boss-part-of: metrics-server
        version: v0.3.1
      # annotations:
      #   seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      serviceAccountName: metrics-server
      volumes:
      # # mount in tmp so we can safely use from-scratch images and/or read-only containers
      # - name: tmp-dir
      #   emptyDir: {}
      # NFS4 version
      # - emptyDir: {}
      #   name: grafana-storage
      - name: tmp-dir
        persistentVolumeClaim:
          claimName: tmp-dir-pvc
      - name: metrics-server-config-volume
        configMap:
          name: metrics-server-config

      # FIXME: USE THIS GUY HERE - https://github.com/kubernetes-incubator/metrics-server/issues/77
      containers:
      - name: metrics-server
        image: k8s.gcr.io/metrics-server-amd64:v0.3.1
        command:
        - /metrics-server
        - --metric-resolution=30s
        - --kubelet-preferred-address-types=InternalIP
        - --kubelet-insecure-tls
        - --logtostderr
        - --v=2
        ports:
        - containerPort: 443
          name: https
          protocol: TCP
        # image: k8s.gcr.io/metrics-server-amd64:v0.3.0
        securityContext:
          # runAsNonRoot: true
          # runAsUser: 65534
          privileged: true
        imagePullPolicy: Always
        volumeMounts:
        - name: tmp-dir
          mountPath: /tmp
      - name: metrics-server-nanny
        image: addon-resizer:1.8.3
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 5m
            memory: 50Mi
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: metrics-server-config-volume
          mountPath: /etc/config
        command:
        - /pod_nanny
        - --config-dir=/etc/config
        - --cpu=40m
        - --extra-cpu=0.5m
        - --memory=40Mi
        - --extra-memory=4Mi
        - --threshold=5
        - --deployment=metrics-server
        - --container=metrics-server
        - --poll-period=300000
        - --estimator=exponential
        # Specifies the smallest cluster (defined in number of nodes)
        # resources will be scaled to.
        - --minClusterSize=2

