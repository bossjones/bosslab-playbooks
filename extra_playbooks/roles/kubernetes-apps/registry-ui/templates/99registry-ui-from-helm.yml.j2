# ---
# # boss__registry__ui__enable_tls
# # SOURCE: https://cert-manager.readthedocs.io/en/latest/tutorials/ca/creating-ca-issuer.html
# apiVersion: certmanager.k8s.io/v1alpha1
# kind: Certificate
# metadata:
#   name: {{boss__registry__ui__deployment_name}}-tls-certificate
#   # namespace: kube-system
# spec:
#   secretName: {{boss__registry__ui__deployment_name}}-tls-certificate
#   issuerRef:
#     name: selfsigning-issuer
#     # We can reference ClusterIssuers by changing the kind here.
#     # The default value is Issuer (i.e. a locally namespaced Issuer)
#     kind: ClusterIssuer
#   commonName: registry-ui.hyenaclan.org
#   organization:
#   - Hyena Labs
#   dnsNames:
#   - registry-ui.hyenaclan.org
#   - www.registry-ui.hyenaclan.org

# ---
# # Source: {{boss__registry__ui__deployment_name}}/templates/secret.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: {{boss__registry__ui__deployment_name}}-secret
#   labels:
#     app: {{boss__registry__ui__deployment_name}}
#     k8s-app: registry-ui
#     kubernetes.io/cluster-service: "true"
#     addonmanager.kubernetes.io/mode: Reconcile
#     boss-part-of: registry-ui
#     version: "0.6"
#
#
# type: Opaque
# data:
#   haSharedSecret: "eVU5a2ZKNndFODV1TmczTQ=="

---
# Source: {{boss__registry__ui__deployment_name}}/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: {{boss__registry__ui__deployment_name}}
{% if boss__registry__ui__service_labels is defined %}
  labels:
{{ boss__registry__ui__service_labels | indent( width=4, indentfirst=True,blank=True) }}
{% endif %}
{% if boss__registry__ui__service_annotations is defined %}
  annotations:
{{ boss__registry__ui__service_annotations | indent( width=4, indentfirst=True,blank=True) }}
{% endif %}
spec:
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      name: registry
      targetPort: 80
    # - port: 5001
    #   protocol: TCP
    #   name: registry
    #   targetPort: 5001
  selector:
    app: {{boss__registry__ui__deployment_name}}
    k8s-app: {{boss__registry__ui__deployment_name}}


---
# Source: {{boss__registry__ui__deployment_name}}/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ boss__registry__ui__deployment_name }}
{% if boss__registry__ui__deployment_labels is defined %}
  labels:
{{ boss__registry__ui__deployment_labels | indent( width=4, indentfirst=True,blank=True) }}
{% endif %}
spec:
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
{% if boss__registry__ui__deployment_spec_template_metadata_labels is defined %}
      labels:
{{ boss__registry__ui__deployment_spec_template_metadata_labels | indent( width=8, indentfirst=True,blank=True) }}
{% endif %}
{% raw %}
      annotations: {}
{% endraw %}
    spec:
      # securityContext:
      #   fsGroup: 1000
      #   runAsUser: 1000
      containers:
        - name: {{ boss__registry__ui__deployment_name }}
          image: "{{boss__registry__ui__image_repo}}:{{boss__registry__ui__image_tag}}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80

{% if boss__registry__ui__deployment_spec_template_spec_containers_resources is defined %}
      resources:
{{ boss__registry__ui__deployment_spec_template_spec_containers_resources | indent( width=8, indentfirst=True,blank=True) }}
{% endif %}
          env:
            # REGISTRY_URL: your docker registry URL to contact (CORS configuration is not needed). Example: http://my-docker-container:5000. (Can't be used with URL, since 0.3.2).
            - name: REGISTRY_URL
              value: http://docker-registry:5000
            - name: DELETE_IMAGES
              value: true
            - name: REGISTRY_TITLE
              value: HyenaLabs Docker Registry UI
---
# Source: {{boss__registry__ui__deployment_name}}/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ boss__registry__ui__deployment_name }}

{% if boss__registry__ui__ingress_labels is defined %}
  labels:
{{ boss__registry__ui__ingress_labels | indent( width=4, indentfirst=True,blank=True) }}
{% endif %}
{% if boss__registry__ui__ingress_annotations is defined %}
  annotations:
{{ boss__registry__ui__ingress_annotations | indent( width=4, indentfirst=True,blank=True) }}
{% endif %}
{% if boss__registry__ui__enable_tls is defined %}
{% if boss__registry__ui__enable_tls == "enabled" %}
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    certmanager.k8s.io/issuer: {{boss__registry__ui__tls_cert_cluster_issuer_name}}
{% endif %}
{% endif %}
spec:
  rules:
    - host: {{boss__registry__ui__subdomain}}.{{domain_root}}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{boss__registry__ui__deployment_name}}
              servicePort: 80

{% if boss__registry__ui__enable_tls is defined %}
{% if boss__registry__ui__enable_tls == "enabled" %}
  tls:
{{ boss__registry__ui__ingress_tls_config | indent( width=4, indentfirst=True,blank=True) }}
{% endif %}
{% endif %}
---
# Source: {{boss__registry__ui__deployment_name}}/templates/pvc.yaml
