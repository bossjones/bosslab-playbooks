{% raw %}
# # SOURCE: https://github.com/rootsongjc/kubernetes-vagrant-centos-cluster/blob/master/addon/dashboard/kubernetes-dashboard.yaml
# # Copyright 2017 The Kubernetes Authors.
# #
# # Licensed under the Apache License, Version 2.0 (the "License");
# # you may not use this file except in compliance with the License.
# # You may obtain a copy of the License at
# #
# #     http://www.apache.org/licenses/LICENSE-2.0
# #
# # Unless required by applicable law or agreed to in writing, software
# # distributed under the License is distributed on an "AS IS" BASIS,
# # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# # See the License for the specific language governing permissions and
# # limitations under the License.

# # Configuration to deploy release version of the Dashboard UI compatible with
# # Kubernetes 1.8.
# #
# # Example usage: kubectl create -f <this_file>

# # ------------------- Dashboard Secret ------------------- #

# apiVersion: v1
# kind: Secret
# metadata:
#   labels:
#     k8s-app: kubernetes-dashboard
#   name: kubernetes-dashboard-certs
#   namespace: {{ boss__dashboard__namespace_name }}
# type: Opaque

# ---
# # ------------------- Dashboard Service Account ------------------- #

# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   labels:
#     k8s-app: kubernetes-dashboard
#   name: kubernetes-dashboard
#   namespace: {{ boss__dashboard__namespace_name }}

# ---
# # ------------------- Dashboard Role & Role Binding ------------------- #

# kind: Role
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: kubernetes-dashboard-minimal
#   namespace: {{ boss__dashboard__namespace_name }}
# rules:
#   # Allow Dashboard to create 'kubernetes-dashboard-key-holder' secret.
# - apiGroups: [""]
#   resources: ["secrets"]
#   verbs: ["create"]
#   # Allow Dashboard to create 'kubernetes-dashboard-settings' config map.
# - apiGroups: [""]
#   resources: ["configmaps"]
#   verbs: ["create"]
#   # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
# - apiGroups: [""]
#   resources: ["secrets"]
#   resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs"]
#   verbs: ["get", "update", "delete"]
#   # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
# - apiGroups: [""]
#   resources: ["configmaps"]
#   resourceNames: ["kubernetes-dashboard-settings"]
#   verbs: ["get", "update"]
#   # Allow Dashboard to get metrics from heapster.
# - apiGroups: [""]
#   resources: ["services"]
#   resourceNames: ["heapster"]
#   verbs: ["proxy"]
# - apiGroups: [""]
#   resources: ["services/proxy"]
#   resourceNames: ["heapster", "http:heapster:", "https:heapster:"]
#   verbs: ["get"]

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: kubernetes-dashboard-minimal
#   namespace: {{ boss__dashboard__namespace_name }}
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: Role
#   name: kubernetes-dashboard-minimal
# subjects:
# - kind: ServiceAccount
#   name: kubernetes-dashboard
#   namespace: {{ boss__dashboard__namespace_name }}

# ---
# # ------------------- Dashboard Deployment ------------------- #

# kind: Deployment
# apiVersion: apps/v1beta2
# metadata:
#   labels:
#     k8s-app: kubernetes-dashboard
#   name: kubernetes-dashboard
#   namespace: {{ boss__dashboard__namespace_name }}
# spec:
#   replicas: 1
#   revisionHistoryLimit: 10
#   selector:
#     matchLabels:
#       k8s-app: kubernetes-dashboard
#   template:
#     metadata:
#       labels:
#         k8s-app: kubernetes-dashboard
#     spec:
#       hostNetwork: true
#       nodeSelector:
#         kubernetes.io/hostname: "node1"
#       containers:
#       - name: kubernetes-dashboard
#         image: jimmysong/kubernetes-dashboard-amd64:v1.8.3
#         ports:
#         - containerPort: 8443
#           protocol: TCP
#           hostPort: 8443
#         args:
#           - --auto-generate-certificates
#           # Uncomment the following line to manually specify Kubernetes API server Host
#           # If not specified, Dashboard will attempt to auto discover the API server and connect
#           # to it. Uncomment only if the default does not work.
#           # - --apiserver-host=http://my-address:port
#         volumeMounts:
#         - name: kubernetes-dashboard-certs
#           mountPath: /certs
#           # Create on-disk volume to store exec logs
#         - mountPath: /tmp
#           name: tmp-volume
#         livenessProbe:
#           httpGet:
#             scheme: HTTPS
#             path: /
#             port: 8443
#           initialDelaySeconds: 30
#           timeoutSeconds: 30
#       volumes:
#       - name: kubernetes-dashboard-certs
#         secret:
#           secretName: kubernetes-dashboard-certs
#       - name: tmp-volume
#         emptyDir: {}
#       serviceAccountName: kubernetes-dashboard
#       # Comment the following tolerations if Dashboard must not be deployed on master
#       tolerations:
#       - key: node-role.kubernetes.io/master
#         effect: NoSchedule

# ---
# # ------------------- Dashboard Service ------------------- #

# kind: Service
# apiVersion: v1
# metadata:
#   labels:
#     k8s-app: kubernetes-dashboard
#   name: kubernetes-dashboard
#   namespace: {{ boss__dashboard__namespace_name }}
# spec:
#   ports:
#     - port: 8443
#       targetPort: 8443
#   selector:
#     k8s-app: kubernetes-dashboard

# SOURCE: https://github.com/kubernetes/dashboard/blob/master/src/deploy/recommended/kubernetes-dashboard.yaml

# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Configuration to deploy release version of the Dashboard UI compatible with
# Kubernetes 1.8.
#
# Example usage: kubectl create -f <this_file>
{% endraw %}


# ------------------- Dashboard Secret ------------------- #

apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-certs
  namespace: {{ boss__dashboard__namespace_name }}
type: Opaque

---
# ------------------- Dashboard Service Account ------------------- #

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: {{ boss__dashboard__namespace_name }}

---
# ------------------- Dashboard Role & Role Binding ------------------- #

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubernetes-dashboard-minimal
  namespace: {{ boss__dashboard__namespace_name }}
rules:
  # Allow Dashboard to create 'kubernetes-dashboard-key-holder' secret.
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
  # Allow Dashboard to create 'kubernetes-dashboard-settings' config map.
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create"]
  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs"]
  verbs: ["get", "update", "delete"]
  # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["kubernetes-dashboard-settings"]
  verbs: ["get", "update"]
  # Allow Dashboard to get metrics from heapster.
  # SOURCE: https://raw.githubusercontent.com/SunMaybo/k8s_1.12.1_resource/c71dac7fd10da7cf851fd7038a4a9a8ae77424b9/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86.md
- apiGroups: [""]
  resources: ["services"]
  resourceNames: ["heapster"]
  # verbs: ["proxy"]
  verbs: ["proxy","get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["services/proxy"]
  resourceNames: ["heapster", "http:heapster:", "https:heapster:"]
  verbs: ["get"]

- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["batch", "extensions"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubernetes-dashboard-minimal
  namespace: {{ boss__dashboard__namespace_name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard-minimal
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: {{ boss__dashboard__namespace_name }}

---
# ------------------- Dashboard Deployment ------------------- #

kind: Deployment
apiVersion: apps/v1beta2
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: {{ boss__dashboard__namespace_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      labels:
        k8s-app: kubernetes-dashboard
    spec:
      hostNetwork: true
      # nodeSelector:
      #   kubernetes.io/hostname: "node1"
      containers:
      - name: kubernetes-dashboard
      # ORIG This one
      # image: jimmysong/kubernetes-dashboard-amd64:v1.8.3
        image: {{boss__dashboard__image_repo}}:{{ boss__dashboard__image_tag }}
        ports:
        - containerPort: 8443
          protocol: TCP
          hostPort: 8443
{%   if boss__dashboard__deployment_container_args is defined %}
        args:
          {{ boss__dashboard__deployment_container_args | indent( width=4, indentfirst=True,blank=True) }}
          # Uncomment the following line to manually specify Kubernetes API server Host
          # If not specified, Dashboard will attempt to auto discover the API server and connect
          # to it. Uncomment only if the default does not work.
          # - --apiserver-host=http://my-address:port
{%   endif %}
        volumeMounts:
        - name: kubernetes-dashboard-certs
          mountPath: /certs
          # Create on-disk volume to store exec logs
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: 8443
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: kubernetes-dashboard-certs
        secret:
          secretName: kubernetes-dashboard-certs
      - name: tmp-volume
        emptyDir: {}
      serviceAccountName: kubernetes-dashboard
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule

---
# ------------------- Dashboard Service ------------------- #

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: {{ boss__dashboard__namespace_name }}
spec:
  ports:
    - port: 8443
      targetPort: 8443
  selector:
    k8s-app: kubernetes-dashboard

