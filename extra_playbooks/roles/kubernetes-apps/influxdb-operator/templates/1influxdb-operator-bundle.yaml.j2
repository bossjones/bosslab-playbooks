# SOURCE: https://github.com/influxdata/influxdata-operator/blob/master/bundle.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: influxdbs.influxdata.com
spec:
  group: influxdata.com
  names:
    kind: Influxdb
    listKind: InfluxdbList
    plural: influxdbs
    singular: influxdb
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: backups.influxdata.com
spec:
  group: influxdata.com
  names:
    kind: Backup
    listKind: BackupList
    plural: backups
    singular: backup
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: restores.influxdata.com
spec:
  group: influxdata.com
  names:
    kind: Restore
    listKind: RestoreList
    plural: restores
    singular: restore
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{boss__influxdb__operator__name}}
  namespace: {{boss__influxdb__operator__namespace_name}}
{% if boss__influxdb__operator__deployment_labels is defined %}
  labels:
{{ boss__influxdb__operator__deployment_labels | indent( width=4, indentfirst=True,blank=True) }}
{% endif %}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{boss__influxdb__operator__name}}
  template:
    metadata:
{% if boss__influxdb__operator__deployment_labels is defined %}
      labels:
{{ boss__influxdb__operator__deployment_labels | indent( width=8, indentfirst=True,blank=True) }}
{% endif %}
    spec:
      serviceAccountName: {{boss__influxdb__operator__name}}
      containers:
        - name: {{boss__influxdb__operator__name}}
          # Replace this with the built image name
          image: {{boss__influxdb__operator__image_repo}}:{{boss__influxdb__operator__image_tag}}
          ports:
          - containerPort: 60000
            name: metrics
          command:
          - influxdata-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPERATOR_NAME
              value: "influxdata-operator"

---
apiVersion: v1
kind: Service
metadata:
  name: {{boss__influxdb__operator__name}}
  namespace: {{boss__influxdb__operator__namespace_name}}
{% if boss__influxdb__operator__service_labels is defined %}
  labels:
{{ boss__influxdb__operator__service_labels | indent( width=4, indentfirst=True,blank=True) }}
{% endif %}
spec:
  ports:
  - name: metrics
    port: 60000
    targetPort: metrics
  selector:
    app: {{boss__influxdb__operator__name}}

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{boss__influxdb__operator__name}}
  namespace: {{boss__influxdb__operator__namespace_name}}
subjects:
- kind: ServiceAccount
  name: {{boss__influxdb__operator__name}}
roleRef:
  kind: Role
  name: {{boss__influxdb__operator__name}}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: {{boss__influxdb__operator__name}}
  namespace: {{boss__influxdb__operator__namespace_name}}
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - pods/attach
  - pods/exec
  - namespaces
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - influxdata.com
  resources:
  - '*'
  - backups
  - restores
  verbs:
  - '*'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{boss__influxdb__operator__name}}
  namespace: {{boss__influxdb__operator__namespace_name}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: influxdb-config
  namespace: {{boss__influxdb__operator__namespace_name}}
  labels:
    app: influxdb
data:
  influxdb.conf: |+
    reporting_disabled = false
    bind_address = "127.0.0.1:8088"
    storage_directory = "/var/lib/influxdb"
    [meta]
      dir = "/var/lib/influxdb/meta"
      retention_autocreate = true
      logging_enabled = true
    [data]
      dir = "/var/lib/influxdb/data"
      wal-dir = "/var/lib/influxdb/wal"
      query_log_enabled = true
      cache_max_memory_size = 1073741824
      cache_snapshot_memory_size = 26214400
      cache_snapshot_write_cold_duration = "10m0s"
      compact_full_write_cold_duration = "4h0m0s"
      max_series_per_database = 1000000
      max_values_per_tag = 100000
      trace_logging_enabled = false
    [coordinator]
      write_timeout = "10s"
      max_concurrent_queries = 0
      query_timeout = "0s"
      log_queries_after = "0s"
      max_select_point = 0
      max_select_series = 0
      max_select_buckets = 0
    [retention]
      enabled = true
      check_interval = "30m0s"
    [shard_precreation]
      enabled = true
      check_interval = "10m0s"
      advance_period = "30m0s"
    [monitor]
      store_enabled = true
      store_database = "_internal"
      store_interval = "10s"
    [subscriber]
      enabled = true
      http_timeout = "30s"
      insecure_skip_verify = false
      ca_certs = ""
      write_concurrency = 40
      write_buffer_size = 1000
    [http]
      enabled = true
      bind_address = 8086
      auth_enabled = false
      log_enabled = true
      write_tracing = false
      pprof_enabled = true
      https_enabled = false
      https_certificate = "/etc/ssl/influxdb.pem"
      https_private_key = ""
      max_row_limit = 10000
      max_connection_limit = 0
      shared_secret = "beetlejuicebeetlejuicebeetlejuice"
      realm = "InfluxDB"
      unix_socket_enabled = false
      bind_socket = "/var/run/influxdb.sock"
    [[graphite]]
      enabled = false
      bind_address = 2003
      database = "graphite"
      retention_policy = "autogen"
      protocol = "tcp"
      batch_size = 5000
      batch_pending = 10
      batch_timeout = "1s"
      consistency_level = "one"
      separator = "."
      udp_read_buffer = 0
    [[collectd]]
      enabled = false
      bind_address = 25826
      database = "collectd"
      retention_policy = "autogen"
      batch_size = 5000
      batch_pending = 10
      batch_timeout = "10s"
      read_buffer = 0
      typesdb = "/usr/share/collectd/types.db"
      security_level = "none"
      auth_file = "/etc/collectd/auth_file"
    [[opentsdb]]
      enabled = false
      bind_address = 4242
      database = "opentsdb"
      retention_policy = "autogen"
      consistency_level = "one"
      tls_enabled = false
      certificate = "/etc/ssl/influxdb.pem"
      batch_size = 1000
      batch_pending = 5
      batch_timeout = "1s"
      log_point_errors = true
    [[udp]]
      enabled = false
      bind_address = 8089
      database = "udp"
      retention_policy = "autogen"
      batch_size = 5000
      batch_pending = 10
      read_buffer = 0
      batch_timeout = "1s"
      precision = "ns"
    [continuous_queries]
      log_enabled = true
      enabled = true
      run_interval = "1s"
---
apiVersion: influxdata.com/v1alpha1
kind: Influxdb
metadata:
  name: influxdb
spec:
  # Add fields here
  size: 1
  baseImage: influxdb:1.6.3-alpine
  imagePullPolicy: Always
  pod:
    resources:
      limits:
        cpu: 8
        memory: 16Gi
      requests:
        cpu: 0.1
        memory: 256Mi
    persistentVolumeClaim:
      metadata:
        name: "influxdb-data-pvc"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: standard-resize
        resources:
          requests:
            storage: 8Gi
