---
##############################################################################
# SERVERS: Install and configure rsyslogd
##############################################################################
- hosts: servers
  name: install tools on all servers
  gather_facts: True
  become: yes
  become_method: sudo
  environment:
    DEBIAN_FRONTEND: noninteractive
  tasks:
    - name: kernel_modules - load ip_vs group
      modprobe: name={{ item }} state=present
      with_items:
      - ip_vs_wrr
      - ip_vs_rr
      - ip_vs_sh
      - ip_vs
      - nf_conntrack_ipv4

    - name: kernel_modules - persist ip_vs kernel modules
      copy:
        dest: /etc/modules-load.d/k8s_ip_vs.conf
        content: |
          ip_vs_wrr
          ip_vs_rr
          ip_vs_sh
          ip_vs
          nf_conntrack_ipv4

    - name: load bridge kernel module ( for /proc/sys/net/bridge/bridge-nf-call-iptables )
      modprobe: name={{item}} state=present
      with_items:
      - bridge

    - name: every reboot load bridge kernel modules
      copy:
        dest: "/etc/modules-load.d/k8s_bridge.conf"
        content: |
          bridge

    - name: load br_netfilter kernel module (for /proc/sys/net/bridge/bridge-nf-call-iptables in newer kernels)
      modprobe: name={{item}} state=present
      with_items:
      - br_netfilter
      register: br_netfilter_load_result
      ignore_errors: yes # because in some old kernels br_netfilter does not exist and bridge is enough

    - name: every reboot load bridge and br_netfilter kernel modules (for k8s)
      # Note: br_netfilter is available only in the newer kernel versions
      copy:
        dest: "/etc/modules-load.d/k8s_br_netfilter.conf"
        content: |
          br_netfilter
      when:
      - br_netfilter_load_result is not failed

    - name: setup kernel parameters for k8s - reboot might be required, but we will not trigger
      #here RH asks for reboot: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/load_balancer_administration/s1-initial-setup-forwarding-vsa
      sysctl: name={{item.name}} value={{item.value}} state=present
      with_items:
        - {name:  "net.bridge.bridge-nf-call-iptables", value: "1" }
        - {name:  "net.bridge.bridge-nf-call-ip6tables", value: "1" }
        - {name:  "net.ipv4.ip_forward", value: "1" }
        - {name:  "net.ipv4.ip_nonlocal_bind", value: "1" }
