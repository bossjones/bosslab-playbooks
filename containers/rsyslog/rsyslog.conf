# SOURCE: https://github.com/rsyslog/rsyslog-docker/blob/master/appliance/alpine/rsyslog.conf
global(processInternalMessages="on")

# SOURCE: https://itnext.io/metrics-from-kubernetes-logs-82cb1dcb3551
global(parser.permitSlashInProgramName="on")
# default location for work (spool) files
# Raise limits within /etc/systemd/journald.conf on the host(s) - ie., RateLimitIntervalSec=30s + RateLimitBurst=1000000
# global(workDirectory="/var/spool/rsyslog")
global(workDirectory=`echo $_RSYSLOG_SPOOL_PATH`)

# module(load="imjournal" ignorepreviousmessages="on" ratelimit.interval="60" ratelimit.burst="2000000" persiststateinterval="10000" statefile="/var/spool/rsyslog/imjournal.state")

#module(load="imtcp" StreamDriver.AuthMode="anon" StreamDriver.Mode="1")
module(load="impstats") # config.enabled=`echo $ENABLE_STATISTICS`)
module(load="imrelp")
module(load="imptcp")
module(load="imudp" TimeRequery="500")


module(load="omstdout")
module(load="omelasticsearch")

module(load="mmjsonparse")
module(load="mmutf8fix")

input(type="imptcp" port=`echo $_IMTCP_PORT`)
input(type="imudp" port=`echo $_IMUDP_PORT`)
input(type="imrelp" port=`echo $_IMRELP_PORT`)

# SOURCE: https://itnext.io/metrics-from-kubernetes-logs-82cb1dcb3551
# ***************************************************************************************
# set $!custom_hostname = exec_template("hostname");
# # When empty it's because message does not come from journald but directly from rsyslogd
# if $!custom_hostname == "" then {
#   set $!custom_hostname = "FROM-RSYSLOGD";
# }
# ***************************************************************************************


# includes done explicitely
# include(file="/etc/rsyslog.conf.d/log_to_logsene.conf" config.enabled=`echo $ENABLE_LOGSENE`)
# include(file="/etc/rsyslog.conf.d/log_to_files.conf" config.enabled=`echo $ENABLE_LOGFILES`)
# include(file="/etc/rsyslog.conf.d/log_to_stdout.conf" config.enabled=`echo $ENABLE_STDOUT`)

#################### default ruleset begins ####################

# we emit our own messages to docker console:
# syslog.* :omstdout:
*.* :omstdout:
# action(type="omstdout")

include(file="/config/droprules.conf" mode="optional")  # this permits the user to easily drop unwanted messages

action(name="main_utf8fix" type="mmutf8fix" replacementChar="?")

# include(text=`echo $CNF_CALL_LOG_TO_LOGFILES`)
# include(text=`echo $CNF_CALL_LOG_TO_LOGSENE`)
include(text=`echo $CNF_CALL_LOG_TO_STDOUT`)
include(text=`echo $_IMTCP_PORT`)
include(text=`echo $_IMUDP_PORT`)
include(text=`echo $_IMRELP_PORT`)

# SOURCE: https://itnext.io/metrics-from-kubernetes-logs-82cb1dcb3551
# ***************************************************************************************
# Compose RFC5424 message
# template(name="rfc5424" type="list") {
#   constant(value="<")
#   property(name="PRI")
#   constant(value=">1 ")
#   property(name="TIMESTAMP" dateFormat="rfc3339" date.inUTC="on")
#   constant(value=" ")
#   property(name="!custom_hostname" position.from="1" position.to="255" caseConversion="lower")
#   constant(value=" ")
#   property(name="!custom_appname" position.from="1" position.to="48" caseConversion="lower")
#   constant(value=" ")
#   property(name="PROCID" position.from="1" position.to="128")
#   constant(value=" ")
#   property(name="MSGID" position.from="1" position.to="32")
#   constant(value=" ")
#   property(name="!custom_sddata")
#   constant(value=" ")
#   property(name="msg" droplastlf="on")
#   constant(value="\n")
# }
# action(type="mmutf8fix")
# action(type="omfwd"
#   target="127.0.0.1"
#   port="6514"
#   protocol="tcp"
#   tcp_framing="octet-counted"
#   template="rfc5424"
#   queue.type="LinkedList"
#   queue.size="5000000"
#   queue.filename="forwarding"
#   queue.maxdiskspace="1g")
# ***************************************************************************************


