# Options for rsyslogd
# -x disables DNS lookups for remote messages
# See rsyslogd(8) for more details

# LogFuncFlow - print out the logical flow of functions (entering and exiting them)

# FileTrace - specifies which files to trace LogFuncFlow. If not set (the default), a LogFuncFlow trace is provided for all files. Set to limit it to the files specified. FileTrace may be specified multiple times, one file each (e.g. export RSYSLOG_DEBUG=”LogFuncFlow FileTrace=vm.c FileTrace=expr.c”

# PrintFuncDB - print the content of the debug function database whenever debug information is printed (e.g. abort case)!

# PrintAllDebugInfoOnExit - print all debug information immediately before rsyslogd exits (currently not implemented!)

# PrintMutexAction - print mutex action as it happens. Useful for finding deadlocks and such.

# NoLogTimeStamp - do not prefix log lines with a timestamp (default is to do that).

# NoStdOut - do not emit debug messages to stdout. If RSYSLOG_DEBUGLOG is not set, this means no messages will be displayed at all.

# Debug - if present, turns on the debug system and enables debug output

# DebugOnDemand - if present, turns on the debug system but does not enable debug output itself. You need to send SIGUSR1 to turn it on when desired.

# OutputTidToStderr - if present, makes rsyslog output information about the thread id (tid) of newly created processes to stderr. Note that not necessarily all new threads are reported (depends on the code, e.g. of plugins). This is only available under Linux. This usually does NOT work when privileges have been dropped (that’s not a bug, but the way it is).
help - display a very short list of commands - hopefully a life saver if you can’t access the documentation…

RSYSLOGD_OPTIONS="-dn -N 1"

RSYSLOG_DEBUGLOG="/tmp/rsyslogd.debug.log"
RSYSLOG_DEBUG="Debug"
